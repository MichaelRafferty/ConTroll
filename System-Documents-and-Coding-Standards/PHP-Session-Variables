While ConTroll has a large amount of debt, going forward all PHP programs should use the lib/global.php session management functions

In each PHP area lib/base.php will set the session prefix in the global variable:

global $appSessionPrefix;
$appSessionPrefix = 'Ctrl/Portal/';

where Ctrl is the Controll Reg System and Portal is the app within Control

Current Apps:
API (future)
Atcon
ConTroll (nee reg/reg_control)
Exhibitor (aka vendor and artist)
Onlinereg
Portal

global.php Session Functions
getSessionVar(name)
    returns the contents of the session variable with the name, including the global prefix, or null if not found.
setSessionVar(name, value)
    sets (overwrites) the session variable with the name, including the global prefix, to value.
isSessionVar(name)
    returns true if the variable with the name, including the global prefix, exists in $_SESSION, false otherwise
unsetSessionVar(name)
    removes the variable with the name, including the global prefix, from the $_SESSION array
function clearSession($prefix = '')
    removes all variables from $_SESSIONwith a name starting with the global prefix and the prefix
    Allows for removing multiple session variables used in a multi-step process at it's completion if you follow
        a naming convention of starting those variable all with the same prefix.

Current Session Variable usage (less prefixes) by application

Portal:
    avatarURL: picture returned by oauth2 providers for an account
    displayName: Preferred Name, as returned by the oauth2 provider
    email: email address of the login account (mail token, oauth provider)
    firstName: first name, as returned by the oauth2 provider
    id: id of the person logged in (from newperson or perinfo as per idType)
    idSource: what validated the login: ('token', oauth2 provider, ...)
    idType: 'n' or 'p' (newperson(id) or person(id))
    lastName: last name, as returned by the oauth2 server
    oauth2pass: intermediate variable used by oauth2 process
    oauth2state: intermediate variable used by oauth2 process
    sessionEmail: temporary saved value of email, used to detect if a re-auth changes the email address
    subscriberId: subscriber identifier as returned by the oauth2 server
    tokenExpiration: UNIX time when the session token needs refreshing.  (Code should allow scripts to run 2 hours past this point,
        but notify the script caller that the session has expired and needs to be refreshed.)
    TotalDue: intermediate variable for checking of the total amount due on a purchase
    transId: the current transaction id of this session, unset when the payment is made and
        a new one built when something is added that will need a transaction




