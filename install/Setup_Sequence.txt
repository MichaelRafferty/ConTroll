Setting up Reg on a new system

This set of instructions is high level.  It expects you know how to create databases in the database server and can set up your web server.
It also expects you to know how to fetch/update files from GitHub. The software and these instructions reside in the repository
    https://github.com/MichaelRafferty/ConTroll

1.  Make sure all prerequisites in System_Requirements.txt are satisified by your system.

2.  Decide what account is going to host Reg.  These instructions will create two complete systems: reg and reg-test.
    a. create said account and create two directories under it: one for reg and one for reg-test
    b. retrieve the production tree to reg and the test tree to reg-test.
        cd {reg}
        git clone git@github.com:MichaelRafferty/ConTroll.git ConTroll
        cd {regtest}
        git clone git@github.com:MichaelRafferty/ConTroll.git ConTroll
    c. copy the regfetch script to your bin directory
        cd {reg}/ConTroll/scripts-sample
        cp regfetchprod ~/bin
        cp regfetchprod ~/bin/regfetchtest
    d. Edit those two scripts in the bin directory to change the HOMEDIR in the scripts to your locations and the branch is set to the branch you are using
    e. Make sure the appropriate version of PHP (>=8.1) is in your PATH (edit your appropriate profile if needed to add it)
    f. Make sure your approiate time zone variable is in your profile
    g. Run php -v and check output for proper version, if wrong, go back to step e and fix it.
    h. Run composer for each tree
        regfetchprod
        regfetchtest
    i. Make the local directories in each directory
        1. cd {reg}/ConTroll
        2. mkdir backups config cronlog crons reglogs scripts onlinereg/images vendor/images
        3. cd {regtest}/ConTroll
        4. mkdir backups config cronlog crons reglogs scripts onlinereg/images vendor/images

3. Create the two databases in your database server
    a. suggested names are reg and reg_test
    b. load the print servers schema into each database
        i.  order of load is:
            schema
            servers
            printers
            routines
    c. Copy config-sample/reg_conf.ini.sample to config/reg_conf.ini
    d. Edit at least the [mysql] section of the configuration to set the database parameters
    f.  load the reg schema into each database using the InstallSetup.php program
        cd {reg}/install
        Use php InstallSetup.php -h to check the appropriate options for your system.
            It is recommended that the schema be set up outside of InstallSetup.php.  If you have not yet edited the rest of reg_conf.ini, use the -v option

4. Populate the tables far enough to use the GUI to continue, or as far as you want.  Note: InstallSetuop will populate initial values for conlist, user, user_auth, atcon_user and atcon_auth for the first user.
    Necessary tables for the GUI:
        a. conList (at least for the current convention, preferred for the current and the next convention (can approximate the dates for that one), InstallSetup.php will insert the first conlist entry.
        b. user and user_auth: InstallSetup.php will install your master admin for you.
        c. atcon_user and atcon_auth: InstallSetup.php will install your master manager for you.

5. Copy or create the following files in your config directory
    a. Edit reg_conf.ini copied in the steps above
        i. Mimimim just to get the gui working:
            1. [mysql] section in its entirity
            2. [con] label, conname, id, minComp, compLen, conLen, server
            3. [reg] https, test, open, server, close, suspended, cancelled,
            4. [atcon] (none)
            5. [vendor] (none)
            6. [google] all
            7. [cc] set up a test version to start
            8. [log] all
            9. [email] all
            10. [artshow] (none)
            11. [control] (none)
    3. Set up Google Authentication in the google console
        a. copy your json file into the config directory using the name you specified in the [google] block above
        b. make sure all of the url's are authorized to use google authentication
            i. (your online reg URL))/reg_control
            ii. (your online reg test system URL)/reg_control
    4. Since the printservers database is used to hold the loanable Pi print servers, you will need to grant select access to it's tables to your reg databas user
        GRANT SELECT ON printservers.servers TO '(reg_db_user)'@'(dbhost)';
        GRANT SELECT ON printservers.printers TO '(reg_db_user)'@'(dbhost)';

6. Set up your web server to server PHP FCGI for the following URL types, for both the test and the production systems
    a. reg.(domain)  => .../reg/onlinereg
    b. atcon.(domain) => .../reg/atcon
    c. vendor.(domain) => .../reg/vendor
    d. artist.(domain) => .../reg/vendor  /* yes, vendor, it uses the server name to determine which interface to show)
    e. reg-test.(domain) => .../reg_test/onlinereg
    f. atcon-test.(domain) => .../reg_test/atcon
    g. vendor-test.(domain) => .../reg_test/vendor
    h. artist-test.(domain) ==> .../reg_test/vendor

7. use reg_control's admin or the database directly to set up:
    a. users
    b. Membership Configuration Tables
    c. Current Configuration Setup

8. If you are running the Zambia scheduling system, zambia needs to access the perinfo, reg, and memList tables to keep its copy of the program
    participant information updated and in sync with the ConTroll.  Zambia pulls the membership and contact info for its program participants
    and when a program participant updates their contact info in Zambia it pushs this change back to ConTroll as well, keeping them in sync.
    You'll need to know the zambia_db_user and the host the database is on. The host is usually 'localhost';
    The parens are not part of the sequnce below, just showing what you need to substitute.
    a. Grant select and update to the zambia user for perinfo:
        GRANT SELECT ON perinfo TO '(zanbia_db_user)'@'(databasehost);
        GRANT UPDATE ON perinfo TO '(zanbia_db_user)'@'(databasehost);
    b. Grant select only to reg and memList:
        GRANT SELECT ON reg to '(zanbia_db_user)'@'(databasehost);
        GRANT SELECT ON memList to '(zanbia_db_user)'@'(databasehost);

9. Set up the backup scripts in cron
    a. Create the scripts directory and copy the backup_mysql script from the scripts-sample directory to it.
    b. Set the variables at the top for your install
        DEST=full absolute path to the destination for the backups files.  Suggested is a directory called backups at the same level as scripts directory
        D=`/bin/date +%Y_%m_%d_%H` export D
        DBNAME=name of your registration database
        DBHOSTNAME=host name for the database server
        DBUSERID=database user id
        DBPASSWORD=database password
        DBPORT=this is usually 3306 for mysql, but could differ on your local server depending on how it was set up
    c. test the backup script by executing it manually
    d. make the crons and cronlog directory at the same level as the scripts directory
    e. copy the bkup.sh file from crons-sample to your crons directory
    f. set the variable for the install directory
        DIR=absolute path to the install directory (the one containing crons and scripts)
    g. add an entry to your crontab to call this script at the frequence of backups you prefer, suggested is every day
        crontab -e
        6 0 * * * /bin/sh /path-to-production-install-directory/crons/bkup.sh
        8 0 * * * /bin/sh /path-to-test-install-directory/crons/bkup.sh
