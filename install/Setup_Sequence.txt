Setting up Reg on a new system

This set of instructions is high level.  It expects you know how to create databases in the database server and can set up your web server.
It also expects you to know how to fetch/update files from GitHub. The software and these instructions reside in the repository
    https://github.com/MichaelRafferty/BalticonReg

1.  Make sure all prerequisites in System_Requirements.txt are satisified by your system.

2.  Decide what account is going to host Reg.  These instructions will create two complete systems: reg and reg-test.
    a. create said account and create two directories under it: one for reg and one for reg-test
    b. retrieve the production tree to reg and the test tree to reg-test.

3. Create the two databases in your database server
    a. suggested names are reg and reg_test
    b. load the print servers schema into each database
        i.  order of load is:
            schema
            servers
            printers
            routines
    c.  load the reg schema into each database
        i. load tables without foreign keys first:
            auth
            conlist
            memCategories
            memTypes
            perinfo
            reg_staff_stats
            routines
            servers
            user
            vendors
        ii. load tables with foreign keys
            ageList
            artist
            artshow_reg
            memlist
            oauth_links
            oauth_people
            atcon_user
            atcon_auth
            reg_badgelist
            reg_club
            user_auth
            vendor_reg
            newperson   (NOTE: Newperson refers to transaction, you might have to do it's foreign key separately as transaction also references a different field in newperson)
            transaction
            paymewnts
            vendor_show
            reg
            atcon_history
            artshow
            artItems
            artsales

4. Populate the tables far enough to use the GUI to continue, or as far as you want.
    Necessary tables for the GUI:
        a. conList (at least for the current convention, preferred for the current and the next convention (can approximate the dates for that one)
        b. permissions tables:
            i. auth
            ii. user (at least for your first reg_control user)
            iii. user_auth (at least to add the admin role to your first reg_control user)

5. Copy or create the folloing files in your config directory
    a. aws.phar: use ours or get a newer copy from AWS (Ours is in the config-sample directory)
    b. copy config-sample/reg_conf.ini.sample to reg_conf.ini and edit all of the sections for your needs
        i. Mimimim just to get the gui working:
            1. [mysql] section in its entirity
            2. [con] label, conname, id, minComp, compLen, conLen, server
            3. [reg] https, test, open, server, close, suspended, cancelled,
            4. [atcon] (none)
            5. [vendor] (none)
            6. [google] all
            7. [cc] set up a test version to start
            8. [log] all
            9. [email] all
            10. [artshow] (none)
            11. [control] (none)
    3. Set up Google Authentication in the google console
        a. copy your json file into the config directory using the name you specified in the [google] block above
        b. make sure all of the url's are authorized to use google authentication
            i. (your online reg URL))/reg_control
            ii. (your online reg test system URL)/reg_control

6. Set up your web server to server PHP FCGI for the following URL types, for both the test and the production systems
    a. reg.(domain)  => .../reg/onlinereg
    b. atcon.(domain) => .../reg/atcon
    TODO: add remaining subsystems here (is vendor staying independent?)
    c. reg-test.(domain) => .../reg_test/onlinereg
    d. atcon-test.(domain) => .../reg_test/atcon

7. use reg_control's admin or the database directly to set up:
    a. users
    b. Membership Configuration Tables
    c. Current Configuration Setup

8. Use reg_control's people to set up your atcon manager
    a. enter the full information for the atcon manager (note the PERID assigned you'll need it for the next step)
    b. In the database, create the entries for the manager in:
        i. atcon_user
        ii. atcon_auth (at least assign the manager permission)
